name: C++ CI/CD with Docker and Host Release new

on:
  push:
    branches: ["cpp-docker"]
    tags:
      - "v.*"   # Trigger release for any semantic version tag like v0.1, v1.0
  pull_request:

permissions:
  contents: write

jobs:
  build-test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # 1. Build Docker image (runs build + tests inside Dockerfile)
      - name: Build & Run Tests
        run: docker build -t cpp-app-ci -f Dockerfile .

  release:
    needs: build-test
    runs-on: ubuntu-22.04
    if: success() && startsWith(github.ref, 'refs/tags/')  # Only run if tests passed and on tag push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up C++ build environment
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake

      - name: Build release binary using CMake
        run: |
          mkdir -p build
          cd build
          cmake ..
          make
          # Assuming your binary is named 'my_app'
          cp my_app ../my_app

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: my_app-linux-x86_64
          path: ./my_app

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}   # Use tag name as release version
          name: Release ${{ github.ref_name }}
          files: ./my_app
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
